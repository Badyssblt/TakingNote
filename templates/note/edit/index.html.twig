{% extends 'base.html.twig' %}

{% block title %}Modifier une note{% endblock %}

{% block body %}
<div class="flex">
    <div class="w-1/4">
        {% include "dashboard/navbar.html.twig" %}
    </div>
    <main class="flex flex-1 p-3 flex-col">
        <form id="form">
            <div class="relative mb-3" data-twe-input-wrapper-init>
                <input
                    type="text"
                    name="note_name"
                    class="peer bg-white text-black block min-h-[auto] w-full rounded border-0 bg-transparent px-3 py-[0.32rem] leading-[1.6] outline-none transition-all duration-200 ease-linear focus:placeholder:opacity-100 peer-focus:text-primary data-[twe-input-state-active]:placeholder:opacity-100 motion-reduce:transition-none  dark:placeholder:text-neutral-300 dark:autofill:shadow-autofill dark:peer-focus:text-primary [&:not([data-twe-input-placeholder-active])]:placeholder:opacity-0"
                    id="note_name"
                    placeholder="note_name"
                    value="{{ note.name }}" />
                <label
                    for="note_name"
                    class="pointer-events-none absolute left-3 top-0 mb-0 max-w-[90%] origin-[0_0] truncate pt-[0.37rem] leading-[1.6] text-neutral-500 transition-all duration-200 ease-out peer-focus:-translate-y-[0.9rem] peer-focus:scale-[0.8] peer-focus:text-primary peer-data-[twe-input-state-active]:-translate-y-[0.9rem] peer-data-[twe-input-state-active]:scale-[0.8] motion-reduce:transition-none dark:text-neutral-400 dark:peer-focus:text-primary"
                    >Nom de la note
                </label>
            </div>
            
            <div id="editor" data-note-content="{{ note.content }}">
            
            </div>
            
            <button type="submit" class="flex justify-center items-center gap-2 px-4 py-2 text-white bg-indigo-600 rounded-lg duration-150 hover:bg-indigo-500 active:bg-indigo-700 w-full">
                Modifier la note
            </button>

        </form>
        <div role="alert" class="rounded-xl border border-gray-100 bg-white p-4 mt-8 hidden" id="alert_box">
            <div class="flex items-start gap-4">
              <span class="text-green-600">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke-width="1.5"
                  stroke="currentColor"
                  class="h-6 w-6"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                  />
                </svg>
              </span>
          
              <div class="flex-1">
                <strong class="block font-medium text-gray-900"> La note a bien été modifié </strong>
          
                <p class="mt-1 text-sm text-gray-700">Les autres utilisateurs pourront voir ces modifications.</p>
              </div>
          
              <button class="text-gray-500 transition hover:text-gray-600">
                <span class="sr-only">Dismiss popup</span>
          
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke-width="1.5"
                  stroke="currentColor"
                  class="h-6 w-6"
                >
                  <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                </svg>
              </button>
            </div>
          </div>


          
    </main>
</div>



{% endblock %}

{% block javascripts %}
    <script src="https://cdn.jsdelivr.net/npm/@editorjs/editorjs@latest"></script>
    <script src="https://cdn.jsdelivr.net/npm/@editorjs/header@latest"></script>
    <script src="https://cdn.jsdelivr.net/npm/@editorjs/simple-image@latest"></script>
    <script src="https://cdn.jsdelivr.net/npm/@editorjs/delimiter@latest"></script>
    <script src="https://cdn.jsdelivr.net/npm/@editorjs/list@latest"></script>
    <script src="https://cdn.jsdelivr.net/npm/@editorjs/checklist@latest"></script>

<script>

    
  document.addEventListener('DOMContentLoaded', async function () {
    const form = document.getElementById("form");
    const pageId = window.location.href.split("/note/edit/").pop();
    const isReadable = {{ is_writer ? 'true' : 'false' }};
    const editor = new EditorJS({
        data: {
            blocks: JSON.parse(document.getElementById('editor').getAttribute('data-note-content'))
        },
      /**
       * Id of Element that should contain Editor instance
       */
      holder: 'editor',
      readOnly: !isReadable,
      /**
       * Available Tools list.
       * Pass Tool's class or Settings object for each Tool you want to use
       */
      tools: {
        header: {
          class: Header,
          inlineToolbar: ['link'],
          config: {
            placeholder: 'Enter a header',
            levels: [2, 3, 4],
            defaultLevel: 3
          }
        },
        image: SimpleImage,
        delimiter: Delimiter,
        list: List,
        checklist: Checklist,
      }
    });

    form.addEventListener('submit', (e) => {
    e.preventDefault();
    editor.save().then((outputData) => {
        const name = document.getElementById("note_name").value;
        console.log(name);
        const formData = new FormData();
        formData.append('note_name', name);
        formData.append('note_content', JSON.stringify(outputData.blocks));
        formData.append('note_category', outputData.note_category);
        formData.append('submitted', true); 
        fetch('/note/edit/' + pageId, {
            method: 'POST',
            body: formData
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Échec de la requête');
            }
            return response.json();
        })
        .then(data => {
            document.getElementById("alert_box").classList.remove("hidden");
        })
        .catch(error => {
            console.error('Erreur lors de l\'envoi des données : ', error);
        });
    }).catch((error) => {
        console.error('Échec de l\'enregistrement : ', error);
    });
});

});
</script>
{% endblock %}
